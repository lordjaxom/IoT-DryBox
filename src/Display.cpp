#include <Arduino.h>

#include "IoT.hpp"
#include "Display.hpp"
#include "Logger.hpp"

extern const unsigned char Logo[] PROGMEM;

static constexpr uint16_t logoWidth = 128;
static constexpr uint16_t logoHeight = 64;

Display::Display()
{
    IoT.beginEvent += [this] { begin(); };
}

void Display::showStandbyPanel(float const temperature, float const humidity)
{
    display_.clearDisplay();
    display_.fillRect(66, 0, 62, 18, SSD1306_WHITE);
    display_.fillRect(103, 1, 24, 16, SSD1306_BLACK);

    display_.setTextSize(2);
    display_.setTextColor(SSD1306_BLACK);
    display_.setCursor(68, 2);
    display_.println(F("off"));
    display_.setTextColor(SSD1306_WHITE);
    display_.setCursor(104, 2);
    display_.println(F("on"));

    display_.setTextSize(2);
    display_.setTextColor(SSD1306_WHITE);
    display_.setCursor(8, 2);
    display_.printf("%2.0f", temperature);
    display_.println(F(" C"));
    display_.fillCircle(38, 5, 3, SSD1306_WHITE);
    display_.fillCircle(38, 5, 2, SSD1306_BLACK);

    display_.setTextSize(4);
    display_.setTextColor(SSD1306_WHITE);
    display_.setCursor(4, 30);
    display_.printf("%2.1f", humidity);
    display_.setCursor(104, 30);
    display_.println(F("%"));
    display_.fillRect(54, 54, 4, 4, SSD1306_WHITE);

    display_.display();
}

void Display::showHeatingPanel(float const temperature, float const humidity)
{
    display_.clearDisplay();
    display_.fillRect(66, 0, 62, 18, SSD1306_WHITE);
    display_.fillRect(67, 1, 36, 16, SSD1306_BLACK);

    display_.setTextSize(2);
    display_.setTextColor(SSD1306_WHITE);
    display_.setCursor(68, 2);
    display_.println(F("off"));
    display_.setTextColor(SSD1306_BLACK);
    display_.setCursor(104, 2);
    display_.println(F("on"));

    display_.setTextSize(4);
    display_.setTextColor(SSD1306_WHITE);
    display_.setCursor(4, 30);
    display_.printf("%2.1f", temperature);
    display_.setCursor(104, 30);
    display_.print(F("C"));
    display_.fillRect(54, 54, 4, 4, SSD1306_WHITE);
    display_.fillCircle(95, 34, 4, SSD1306_WHITE);
    display_.fillCircle(95, 34, 2, SSD1306_BLACK);

    display_.setTextSize(2);
    display_.setTextColor(SSD1306_WHITE);
    display_.setCursor(8, 2);
    display_.printf("%2.0f", humidity);
    display_.println(F(" %"));

    display_.display();
}

void Display::showSetpointPanel(float const setpoint)
{
    display_.clearDisplay();

    display_.setCursor(0, 2);
    display_.setTextSize(2);
    display_.setTextColor(SSD1306_WHITE);
    display_.print(F("Target"));
    display_.setCursor(80, 2);
    display_.print(F("Temp"));

    display_.setTextSize(4);
    display_.setTextColor(SSD1306_WHITE);
    display_.setCursor(4, 30);
    display_.printf("%3.0f", setpoint);
    display_.setCursor(90, 30);
    display_.print(F("C"));
    display_.fillCircle(81, 34, 4, SSD1306_WHITE);
    display_.fillCircle(81, 34, 2, SSD1306_BLACK);

    display_.display();
}

void Display::begin()
{
    log("initializing display at IÂ²C address ", address);

    display_.begin(SSD1306_SWITCHCAPVCC, address);
    display_.clearDisplay();
    display_.drawBitmap(0, 0, Logo, logoWidth, logoHeight, 1);
    display_.display();
}

const unsigned char Logo[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x07, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x1f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x7f, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xfc, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x07, 0xf0, 0x01, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1f, 0xc0, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3f, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3c, 0x00, 0x00, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x38, 0x00, 0x00, 0x03, 0x80, 0x00, 0x18, 0x00, 0xc0, 0x00, 0x03, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x38, 0xc1, 0x80, 0x03, 0x80, 0x00, 0x18, 0x00, 0xc0, 0x00, 0x03, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x38, 0xc1, 0x80, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x38, 0xc1, 0x9b, 0x83, 0x83, 0xc3, 0x98, 0xf6, 0xcd, 0xc1, 0xc3, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x38, 0xc1, 0x9f, 0xc3, 0x87, 0xe7, 0x99, 0xfe, 0xcf, 0xe3, 0xe3, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x38, 0xc1, 0x9c, 0xe3, 0x8e, 0x76, 0x1b, 0x8e, 0xce, 0x70, 0x33, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x38, 0xc1, 0x98, 0x63, 0x8c, 0x36, 0x1b, 0x06, 0xcc, 0x30, 0x33, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x38, 0xc1, 0x98, 0x63, 0x8c, 0x36, 0x1b, 0x06, 0xcc, 0x33, 0xf3, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x38, 0xc1, 0x98, 0x63, 0x8c, 0x36, 0x1b, 0x06, 0xcc, 0x36, 0x33, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x38, 0xe3, 0x98, 0x63, 0x8e, 0x76, 0x1b, 0x8e, 0xcc, 0x36, 0x33, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x38, 0x7f, 0x18, 0x63, 0x87, 0xe6, 0x19, 0xfe, 0xcc, 0x36, 0x73, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x38, 0x3e, 0x18, 0x63, 0x83, 0xc6, 0x18, 0xf6, 0xcc, 0x33, 0xd3, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x38, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x38, 0x00, 0x00, 0x03, 0x80, 0x00, 0x01, 0x8c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3c, 0x00, 0x00, 0x07, 0x80, 0x00, 0x01, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3f, 0x00, 0x00, 0x1f, 0x87, 0xc0, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1f, 0xc0, 0x00, 0x7f, 0x0f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x07, 0xf0, 0x01, 0xfc, 0x0c, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xfc, 0x07, 0xf0, 0x0c, 0x33, 0xb0, 0xcf, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xff, 0x1f, 0xe0, 0x0c, 0x37, 0xb0, 0xd9, 0x9f, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xff, 0xff, 0xe0, 0x0c, 0x77, 0x30, 0xd8, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xff, 0xff, 0xe0, 0x0f, 0xe6, 0x30, 0xdc, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0xff, 0xff, 0xf8, 0x0f, 0xc6, 0x30, 0xcf, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x07, 0xff, 0xff, 0xfc, 0x0c, 0x06, 0x30, 0xc3, 0xb1, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x07, 0xff, 0xff, 0xfc, 0x0c, 0x06, 0x39, 0xc1, 0xb1, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0xff, 0xff, 0xf8, 0x0c, 0x06, 0x1f, 0x99, 0xb3, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xff, 0xff, 0xe0, 0x0c, 0x06, 0x0f, 0x0f, 0x1e, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x07, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x07, 0xff, 0xff, 0xfc, 0x0f, 0xe0, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0xff, 0xff, 0xf8, 0x0f, 0xf0, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xff, 0xff, 0xe0, 0x0c, 0x38, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xff, 0xff, 0xe0, 0x0c, 0x1c, 0xe0, 0x06, 0xe0, 0xf1, 0x86, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0xff, 0xff, 0xf8, 0x0c, 0x0d, 0xe6, 0x37, 0xf1, 0xf9, 0xce, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x07, 0xff, 0xff, 0xfc, 0x0c, 0x0d, 0x86, 0x37, 0x3b, 0x9c, 0xfc, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x07, 0xff, 0xff, 0xfc, 0x0c, 0x0d, 0x86, 0x36, 0x1b, 0x0c, 0x78, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0xff, 0xff, 0xf8, 0x0c, 0x0d, 0x83, 0x66, 0x1b, 0x0c, 0x30, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xff, 0xff, 0xe0, 0x0c, 0x1d, 0x83, 0x66, 0x1b, 0x0c, 0x78, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xff, 0xff, 0xe0, 0x0c, 0x39, 0x81, 0xe7, 0x3b, 0x9c, 0xfc, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xff, 0xff, 0xe0, 0x0f, 0xf1, 0x81, 0xc7, 0xf1, 0xf9, 0xce, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x7f, 0xff, 0xc0, 0x0f, 0xe1, 0x80, 0xc7, 0xe0, 0xf1, 0x86, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x1f, 0xff, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// void drawTargetTemperature()
// {
//     display.setCursor(0, 2);
//     display.setTextSize(2);
//     display.setTextColor(SSD1306_WHITE);
//     display.print(F("Target"));
//     display.setCursor(80, 2);
//     display.print(F("Temp"));
//
//     dtostrf(TargetTemp, 3, 0, TargetTempDisplay);
//
//     display.setTextSize(4);
//     display.setTextColor(SSD1306_WHITE);
//
// #ifdef Fahrenheit
//
//     display.setCursor(10, 30);
//     display.print(TargetTempDisplay);
//     display.fillCircle(87, 34, 4, SSD1306_WHITE);
//     display.fillCircle(87, 34, 2, SSD1306_BLACK);
//     display.setCursor(96, 30);
//     display.print(F("F"));
// #endif
//
// #ifndef Fahrenheit
//     display.setCursor(4, 30);
//     display.print(TargetTempDisplay);
//     display.setCursor(90, 30);
//     display.print(F("C"));
//     display.fillCircle(81, 34, 4, SSD1306_WHITE);
//     display.fillCircle(81, 34, 2, SSD1306_BLACK);
// #endif
// }
